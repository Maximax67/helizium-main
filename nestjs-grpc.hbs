/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

/* eslint-disable @typescript-eslint/no-empty-object-type */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

{{#*inline "selector"}}
{{#each nested}}
{{#if fields}}
{{> type }}
{{else if methods}}
{{> service }}
{{else if values}}
{{> enum }}
{{else}}
{{> namespace }}
{{/if}}
{{/each}}
{{/inline}}
{{> selector }}
{{#*inline "namespace"}}
{{#if comment}}
{{comment}}
{{/if}}
export const PACKAGE_NAME = '{{@key}}';
{{> selector }}
{{/inline}}

{{#*inline "service"}}
{{#each methods}}
{{else}}
// tslint:disable-next-line:no-empty-interface
{{/each}}
{{#if comment}}
{{comment}}
{{/if}}
export const SERVICE_NAME = '{{@key}}';

export interface {{@key}} {
{{#each methods}}
{{#if comment}}
  {{comment}}
{{/if}}
{{#if this.requestStream}}
{{uncapitalize @key}}(data: Observable<{{this.requestType}}>, metadata?: Metadata): Observable<{{this.responseType}}>;
{{else}}
  {{uncapitalize @key}}(data: {{this.requestType}}, metadata?: Metadata): Observable<{{this.responseType}}>;
{{/if}}
{{/each}}
}
{{~> selector }}
{{/inline}}
{{#*inline "type"}}
{{#each fields}}
{{else}}


// tslint:disable-next-line:no-empty-interface
export interface {{@key}} {
{{~/each}}
{{#if comment}}
{{comment}}
{{/if}}
{{#each fields}}
{{#unless @index}}


export interface {{@../key}} {
{{/unless}}
{{#if comment}}
  {{comment}}
{{/if}}
  {{@key}}?: {{type this}};
{{/each}}
}
{{~#if nested}}
export namespace {{@key}} {
{{#if comment}}
  {{comment}}
{{/if}}
{{> selector }}
}
{{/if}}
{{/inline}}
{{#*inline "enum"}}
{{#each values}}
{{else}}


// tslint:disable-next-line:no-empty-interface
export enum {{@key}} {
{{~/each}}
{{#if comment}}
{{comment}}
{{/if}}
{{var "comments" comments~}}

{{#each values}}
{{#unless @index}}


export enum {{@../key}} {
{{/unless}}
{{#if (enumComment @key)}}
  {{enumComment @key}}
{{/if}}
  {{@key}} = {{this}},
{{/each}}
}
{{~/inline}}
